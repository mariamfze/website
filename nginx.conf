user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    # Cache-Control headers
    expires $http_expires;
    add_header Cache-Control "public, max-age=31536000, immutable" always;

    server {
        listen 80;
        server_name catalystmediafze.com www.catalystmediafze.com;

        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name catalystmediafze.com www.catalystmediafze.com;

        # SSL Certificate (replace with your actual certificate files)
        ssl_certificate /etc/ssl/certs/catalystmediafze.crt;
        ssl_certificate_key /etc/ssl/private/catalystmediafze.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        root /var/www/catalystmediafze;
        index index.html index.htm;

        # Set custom server header
        add_header Server "Catalyst Media FZE Web Server" always;

        # Caching for static assets
        location ~* \.(ico|pdf|flv|jpg|jpeg|png|gif|svg|css|js|mp4|webm|woff|woff2|ttf|otf|eot|ogg|ogv|mp3|webp)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location ~* \.(html|htm|xml|json)$ {
            expires 600;
            add_header Cache-Control "public, max-age=600, must-revalidate";
        }

        # Rewrite rule for HTML files without .html extension
        location / {
            try_files $uri $uri.html $uri/ =404;
        }

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Logging for debugging
        error_page 404 /404.html;
    }
}
